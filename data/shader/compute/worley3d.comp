#version 450

layout(std430, set = 0, binding = 0) readonly buffer in_buffer
{
	uvec3 size;
	uint cube_point_count;
	vec3 cube_points[];
} in_data;

layout(std430, set = 0, binding = 1) buffer out_buffer
{ 
	float dist[]; 
} out_data;

#define MAX_FLOAT 3.402823466e+38

void main()
{
	const uvec3 id = gl_GlobalInvocationID.xyz;
	const uint width = in_data.size.x;
	const uint height = in_data.size.y;
	const uint depth = in_data.size.z;

	float min_dist = MAX_FLOAT;
	for (uint i = 0; i < in_data.cube_point_count; i++)
	{
		float dist = length(vec3(id) - in_data.cube_points[i]);
		if (dist < min_dist)
			min_dist = dist;
	}

	const uint index = id.x + id.y * width + id.z * width * height;
	out_data.dist[index] = min_dist;
}
