#version 450
#extension GL_EXT_debug_printf : enable

#include "transmittance.h"
#include "scattering.h"
#include "env_set.h"

layout (set = SS_SETS_TRANSMITTANCE_SAMPLER, binding = 0) uniform sampler2D transmittance_sampler;
layout (set = SS_SETS_SUM_IMAGE, binding = 0, rgba16f) uniform writeonly image3D sum_image;
layout (set = SS_SETS_SCATTERING_IMAGE, binding = 0, rgba16f) uniform writeonly image3D scattering_image;
ENV_SET(SS_SETS_ENV, env)
layout (push_constant) uniform push_constants {
	uint offset;
} pc;

#include "functions.glsl"

void main() {
	float tex_height = float(pc.offset + gl_WorkGroupID.x)/SCATTERING_RESOLUTION_HEIGHT;
	float tex_view = float(gl_WorkGroupID.y)/SCATTERING_RESOLUTION_VIEW;
	float tex_sun = float(gl_WorkGroupID.z)/SCATTERING_RESOLUTION_SUN;

	float actual_height = tex_to_height(tex_height, env.atmosphere_height);
	float c_view = tex_to_view(tex_view, actual_height, env.r_planet);
	float c_sun = tex_to_sun(tex_sun);

	// prevent stupid edgecases.
	actual_height = clamp(actual_height, 0.3, env.atmosphere_height);

	vec4 r_rgb_m_r = single_scattering(
		actual_height,
		unit_vec_from_cos(c_view),
		-unit_vec_from_cos(c_sun),
		env.rayleigh_scale_height,
		env.mie_scale_height,
		env.rayleigh_scattering_coefficient,
		env.mie_scattering_coefficient,
		env.rayleigh_scattering_coefficient,
		env.mie_scattering_coefficient/0.9f,
		env.r_planet,
		env.r_atmosphere,
		env.atmosphere_height,
		vec2(TRANSMITTANCE_RESOLUTION_HEIGHT, TRANSMITTANCE_RESOLUTION_VIEW),
		transmittance_sampler);
	// debugPrintfEXT("h: %f -> %f, v: %f -> %f, s: %f -> %f ::val:: %v4f",
	// 	tex_height, actual_height,
	// 	tex_view, acos(c_view),
	// 	tex_sun, acos(c_sun),
	// 	r_rgb_m_r);

	ivec3 tex_coord = ivec3(gl_WorkGroupID) + ivec3(pc.offset, 0, 0);
	imageStore(scattering_image, tex_coord, r_rgb_m_r);
	imageStore(sum_image, tex_coord, r_rgb_m_r);
}
